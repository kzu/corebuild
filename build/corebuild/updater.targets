<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Update" InitialTargets="_VerifyInputs" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<PS Condition="'$(PowerShell)' == ''">%WINDIR%\System32\WindowsPowerShell\v1.0\powershell.exe</PS>
		<Curl>curl -k -f -L</Curl>
		<XmlNs>&lt;Namespace Prefix='msb' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;</XmlNs>

		<UpdateDependsOn>
			_ReadLocalEtag;
			_FetchRemoteEtag;
			_UpdateLocalFile;
			_ReportEtagStatus
		</UpdateDependsOn>
	</PropertyGroup>

	<Target Name="Update" DependsOnTargets="$(UpdateDependsOn)" />

	<Target Name="_ReadLocalEtag">
		<XmlPeek Namespaces="$(XmlNs)"
				 XmlInputPath="$(LocalFile)"
				 Query="/msb:Project/msb:PropertyGroup/msb:NuGetRestoreETag/text()">
			<Output TaskParameter="Result" PropertyName="LocalEtag" />
		</XmlPeek>
	</Target>

	<Target Name="_FetchRemoteEtag" DependsOnTargets="_FetchRemoteEtagPS;_FetchRemoteEtagCurl" />

	<Target Name="_FetchRemoteEtagPS">
		<Exec Command='"$(PS)" -NoProfile -Command "&amp; { (Invoke-WebRequest -Uri $(RemoteFile) -Method HEAD).Headers.ETag }"'
			  ConsoleToMSBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="RemoteEtag"/>
		</Exec>
		<PropertyGroup>
			<RemoteEtag>$(RemoteEtag.Trim('&quot;'))</RemoteEtag>
		</PropertyGroup>
	</Target>
	
	<Target Name="_FetchRemoteEtagCurl" Condition="'$(OS)' != 'Windows_NT'">
		<Exec Command='$(Curl) -I "$(RemoteFile)"'
			  StandardOutputImportance='low'
			  ConsoleToMSBuild="true">
			<Output TaskParameter="ConsoleOutput" ItemName="HttpResponse"/>
		</Exec>

		<ItemGroup>
			<!-- Each line becomes an item, filter the one for ETag header -->
			<RemoteEtag Include="@(HttpResponse)" Condition="$([System.String]::new('%(Identity)').StartsWith('ETag:')) " />
		</ItemGroup>
		<PropertyGroup>
			<!-- Turn the item into a property, so we can do property functions on it -->
			<RemoteEtag>@(RemoteEtag)</RemoteEtag>
			<RemoteEtag>$(RemoteEtag.Substring(5).Trim().TrimStart('"').TrimEnd('"'))</RemoteEtag>
		</PropertyGroup>
	</Target>

	<Target Name="_UpdateLocalFile" Condition="'$(LocalEtag)' != '$(RemoteEtag)'">
		<Exec Command='$(Curl) -o "$(LocalFile)" "$(RemoteFile)"'
			  StandardOutputImportance='low'
			  Condition="'$(OS)' != 'Windows_NT'"/>

		<Exec Command='"$(PS)" -NoProfile -Command "&amp; { Invoke-WebRequest -Uri $(RemoteFile) -OutFile &quot;$(LocalFile)&quot; }"'
			  IgnoreExitCode="true"
			  Condition="'$(OS)' == 'Windows_NT'" />

		<!-- NOTE: known issue, XmlPoke removes the whitespace, 
			 but then users aren't intended to edit the updated 
			 file but the one on the repo instead, via PRs :) -->
		<XmlPoke Namespaces="$(XmlNs)"
				 XmlInputPath="$(LocalFile)"
				 Query="/msb:Project/msb:PropertyGroup/msb:Etag"
				 Value="$(RemoteEtag)" />
	</Target>

	<Target Name="_ReportEtagStatus">
		<Message Importance="high"
				 Text="New version found, updated $(LocalFile)."
				 Condition="'$(LocalEtag)' != '$(RemoteEtag)' " />				 
		<Message Importance="high"
				 Text="No updates found for $(LocalFile)."
				 Condition="'$(LocalEtag)' == '$(RemoteEtag)' " />
	</Target>
	
	<Target Name="_VerifyInputs">
		<Error Condition="'$(LocalFile)' == ''" Text="Please specify the 'LocalFile' property with the file to update." />
		<Error Condition="'$(RemoteFile)' == ''" Text="Please specify the 'RemoteFile' property with the remote file to update from." />

		<!-- Ensure PowerShell v3+ -->
		<Exec Command='$(PS) -NoProfile -Command "&amp; { exit [int]($PSVersionTable.PSVersion.Major -lt 3) }"'
			  IgnoreExitCode="true"
			  Condition="'$(OS)' == 'Windows_NT'">
			<Output TaskParameter="ExitCode" PropertyName="LastExitCode" />
		</Exec>
		<Error Condition="'$(LastExitCode)' != '0'" Text="Powershell v3 or greater is required on Windows." />

		<!-- Should fail on *nix if curl isn't found. -->
		<Exec Command="command -v curl" Condition="'$(OS)' != 'Windows_NT'" />
	</Target>

	<PropertyGroup>
		<UpdaterImported>true</UpdaterImported>
	</PropertyGroup>

</Project>
