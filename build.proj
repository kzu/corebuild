<!--  
	This is a sample default build script that showcases the capabilities 
	of corebuild. Feel free to remove all comments and sample elements.	
-->
<Project Sdk="CoreBuild/0.5.0-*" TreatAsLocalProperty="Configuration" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Properties and Targets documentation can be rendered by running the 
       Help target provided by the CoreBuild.Help package, which is referenced 
       automatically 
  -->

  <PropertyGroup>
    <!-- Configuration to use for Build. Defaults to Debug if empty. -->
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
  </PropertyGroup>

  <ItemGroup>
    <!-- MSBuild /t:Restore will restore these packages -->
    <PackageReference Include="MSBuilder.DumpItems" Version="0.2.1" />
    <PackageReference Include="xunit.runner.msbuild" Version="2.2.0" />
  </ItemGroup>

  <!-- Targets can be documented, and /t:Help will render the help -->
  <Target Name="Build">
    <!-- Once the Restore is done we can use a custom task from the NuGet package -->
    <DumpItems Items="@(PackageReference)" ItemName="PackageReference" />
  </Target>

  <!-- Configures the project in preparation for Build. Includes running Restore. -->
  <Target Name="Configure" DependsOnTargets="Restore">
    <!-- Configures the colored console logger that renders /t:Help in a nicer way -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="ColoredConsole" Properties="FORCE_RELOAD=$([System.Guid]::NewGuid().ToString())" />
  </Target>

  <Target Name="Clean" />

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <Target Name="Test">
    <xunit Assemblies="@(TestAssembly)" />
  </Target>

  <Target Name="Run" />
</Project>
